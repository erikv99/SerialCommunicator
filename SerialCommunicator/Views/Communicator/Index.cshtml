@model CommunicatorVM

@{
    ViewData["Title"] = "Communicator";
}

<div class="main-container">

    <div class="command-overview-container c-container">

        @foreach (var command in Model.Commands)
        {
            <div class="container-fluid command-container">
                <div class="row">
                    <div class="col-md-8">
                        <div class="command-row command-name">@command.Name</div>
                        <div class="command-row command-description">@command.Description</div>
                        <div class="command-row command-payload">@command.GetPayloadAsString()</div>
                    </div>
                    
                    <div class="col-md-4 btn-section">
                        
                        <div class="row col-md-12 mutate-btn-section">
                            <button class="mutate-btn" onclick="editCommand('@command.Id');">
                                <i class="fa-solid fa-gear"></i>
                            </button>
                            <button class="mutate-btn" onclick="deleteCommand('@command.Id');">
                                <i class="fa-solid fa-trash"></i>
                            </button>
                                <button class="mutate-btn" style="width: 47%;" onclick="sendCommand('@command.Id');">
                                Send <i class="fa-solid fa-paper-plane"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="c-container p-container">
        <span class="prompt">@Model.PromptName> Awaiting instructions...</span>
        </table>
    </div>
</div>

<script>

    function editCommand(commandId) {
        addPromptMessage("This function is not yet implemented.");
    }

    function deleteCommand(commandId) {
        addPromptMessage("This function is not yet implemented.");
    }

    function sendCommand(commandId) { 
        
        addPromptMessage("Sending command with id #" + commandId + "...");

        $.ajax({

            type: "POST",
            url: "/Communicator/SendCommand",
            data: { id: commandId },
            
            success: function (response) {
                console.log(response);
                addPromptMessage("Command with id #" + commandId + " was sent successfully.");
                console.log("Success");
            },
            
            error: function (response) {
                console.log(response);
                addPromptMessage("Failed to send command with id #" + commandId + ".");
            }
        });
    }

    function addPromptMessage(message) {
        var capitalizedMessage = message.charAt(0).toUpperCase() + message.slice(1);
        var promptMessage = "@Model.PromptName" + "> " +  capitalizedMessage;
        $('.p-container').append('<span class="prompt"> ' + promptMessage + '</span>');
    }
</script>

<style>

    .mutate-btn-section {
        display: block;
        text-align: end;
        margin-top: -0.3em;
    }

    .send-btn-container {
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
    }

    .btn-section {
        display: grid;
        padding-right: 0px;
    }

    .command-name {
        color: #00BCD4;
        font-weight: bold;
        margin-bottom: 1.5em;
    }
    
    .command-row {
        width: 90%;
        display: block;
    }

    .command-description {
        color: #00BCD4;
        line-height: 1.6;
        margin-top: 10px;
        margin-bottom: 1.1em;
        font-size: 0.7em;
    }

    .command-payload {
        font-family: 'Courier New', monospace;
        margin-top: 4px;
        color: #8990FF;
        font-size: 0.7em;
    }

    .command-payload:hover {
        color: #81C784; 
        cursor: pointer;
    }

    .send-btn {
        background: linear-gradient(to right, #0088CC, #0044CC);
        color: #FFFFFF;
        border: none;
        padding: 8px 10px;
        border-radius: 5px;
        transition: all 0.3s ease;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        width: 70%;
        height: 2.5em;
        text-align: center;
        position: relative;
        right: -2.5em;
        bottom: -0.3em;
        min-width: 65px;
    }

    .send-btn:hover {
        background: linear-gradient(to right, #0056b3, #002d70); 
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); 
        background-color: #0056b3;
    }
    
    .mutate-btn {
        padding: 4px 8px;
        width: 2.2em;
        background: linear-gradient(to right, #08C, #6A3E06);
        color: #FFFFFF;
        border: none;
        border-radius: 5px;
        transition: all 0.3s ease;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    .command-container {
        margin-bottom: 10px;
        border-radius: 6px;
        padding: 0.75em;
        background-color: #2C2C2C; 
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); 
    }

    .prompt {
        color: #00FF00;
        background-color: #0F0F0F;
        width: 100%;
        display: block;
        font-family: 'Fira Code', 'Consolas', 'Courier New', monospace;
    }

    .prompt-message {
        color: #00FF00;
        background-color: #0F0F0F;
        border: none;
        outline: none;
        font-family: Consolas, monospace;
    }

    .main-container {
        display: flex;
        justify-content: space-around;
        gap: 30px;
        padding: 20px;
    }

    .command-overview-container {
        flex: 1;
        background-color: #f0f0f0;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        padding: 15px;
        max-width: 45%;
    }

    .c-container {
        border: 5px ridge gray;
        padding: 10px;
        background-color: #0F0F0F;
        color: #00FF00;
        width: 50%; 
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        min-height: 45em;
        max-height: 0vh; 
        overflow-y: auto;
        @* TODO: No clue why this works, but it does, investigate later. *@
    }

    .width-100 {
        width: 100%;
    }


    .prompt-container {
        flex: 1;
        display: flex;
        gap: 10px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        min-height: 25em;
    }

    body {
        font-family: 'Consolas', monospace;
        font-size: 1em;
        background-color: #1C1C1C; 
        color: #FFFFFF;
    }
</style>