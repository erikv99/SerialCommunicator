@model CommunicatorVM

@{
    ViewData["Title"] = "Communicator";
}

@* <!-- @* // todo add font awesome icons. *@
@* <div class="hero">
    <img src="~/images/spaceBackground.webp"/>
    <div class="container command-overview">
        
        @foreach (var command in Model.RegisteredCommands)
        {
            <div class="container command-container">
                <table>
                    <tr>
                        <td>
                            @command.Name <button>Send</button>
                        </td>
                    </tr>
                </table>
            </div>
            //<button class="command" onclick="sendCommand('@command')">@command</button>
        })
            
        @if (!Model.RegisteredCommands.Any())
        {
            <div class="container command-container">
                >No commands registered            
            </div>
            // Show message saying no commands registered
        }
    </div>
</div> *@ 

<div class="main-container">
    <div class="command-overview-container c-container">
        @foreach (var command in Model.Commands)
        {
            <div class="container command-container">
                <table class="width-100">
                    <tr>
                        <td>
                            @command.Name
                            <button class="command">Send</button>
                        </td>
                    </tr>
                </table>
            </div>
        }
    </div>

    <div class="prompt-container c-container">
        <span class="prompt">@Model.PromptName> Awaiting instructions...</span>
    </div>
</div>


<style>
    body {
        font-family: Consolas, monospace;
    }

    .prompt {
        color: #00FF00;
        background-color: #0F0F0F;
    }

    .input-field {
        color: #00FF00;
        background-color: #0F0F0F;
        border: none;
        outline: none;
        font-family: Consolas, monospace;
    }

    .prompt-message {
        color: #00FF00;
        background-color: #0F0F0F;
        border-none;
        outline: none;
        font-family: Consolas, monospace;
    }

    .main-container {
        display: flex;
        justify-content: space-around;
        align-items: flex-start;
        gap: 30px;
        padding: 20px;
    }

    .command-overview-container {
        flex: 1;
        background-color: #f0f0f0;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        padding: 15px;
        max-width: 45%;
    }

    .command-container {
        margin-bottom: 10px;
        border: 2px solid lightgoldenrodyellow;
        border-radius: 6px;
    }

    .c-container {
        border: 5px ridge gray;
        padding: 10px;
        background-color: #0F0F0F;
        color: #00FF00;
    }

    .width-100 {
        width: 100%;
    }

    .command {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 10px 15px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        float: right;
    }

    .command:hover {
        background-color: #0056b3;
    }

    .prompt-container {
        flex: 1;
        display: flex;
        gap: 10px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        padding: 15px;
        max-width: 45%;
        min-height: 25em;

    }
</style>

<script>

    function addPromptMessage(message) {
        var capitalizedMessage = message.charAt(0).toUpperCase() + message.slice(1);
        $('.prompt-container').append('<div class="prompt-message">' + @Model.PromptName + "> " +  capitalizedMessage + '</div>');
    }

    function sendCommand(commandId) { 
        
        $.ajax({

            type: "POST",
            url: "/Communicator/SendCommand",
            data: { id: commandId },
            
            success: function (response) {
                console.log(response);
            },
            
            error: function (response) {
                console.log(response);
            }
        });
    }

    document.getElementById('userInput')
        .addEventListener('keypress', (event) => {
        
        // 13 is the enter key
        if (event.keyCode === 13) {

            var userInput = document.getElementById('userInput').value;
            console.log(userInput);
            document.getElementById('userInput').value = '';
        }
    });
        
</script>