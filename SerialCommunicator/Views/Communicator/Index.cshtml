@model CommunicatorVM

@{
    ViewData["Title"] = "Communicator";
}

<div class="main-container">

    <div class="command-overview-container c-container">

        @if (Model.IsKillSwitchActive)
        {
            <div class="container-fluid command-container">
                <div class="row">
                    <div class="col-md-8">
                        <div class="command-row command-name">Kill Switch</div>
                        <div class="command-row command-description">The kill switch is currently active. All interactions are disabled.</div>
                    </div>
                </div>
            </div>
        }

        <div class="add-btn-section">
            <button class="add-btn" onclick="clickedAddButton();">
                Add <i class="fa-solid fa-plus"></i>
            </button>
        </div>

        <div class="add-command-section">
            <form method="post" id="commandForm" class="add-command-form" role="form">
                <div class="form-group">
                    <label class="control-label">Name</label>
                    <input class="form-control" type="text" id="nameInput" placeholder="Turn off" required />
                    <span class="text-danger"></span> 
                </div>

                <div class="form-group">
                    <label class="control-label">Description</label>
                    <input class="form-control" type="text" id="descriptionInput" placeholder="Turns something off" required />
                    <span class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label class="control-label">Payload</label>
                    <input 
                        class="form-control" 
                        type="text" 
                        id="payloadInput" 
                        placeholder="20-06-00-04-02-af-7b-00" 
                        pattern="^([0-9A-Fa-f]{2}-){7}[0-9A-Fa-f]{2}$|^([0-9A-Fa-f]{2}-){6}[0-9A-Fa-f]{2}$"
                        title="Please enter a payload in the format xx-xx-xx-xx-xx-xx (hexadecimal). Single numbers should have a leading zero (e.g. 2 -> 02)" />
                </div>

                <div class="submit-container" style="width: 100%;">
                    <button type="submit" class="btn btn-primary submit-btn float-right">Submit</button>
                </div>
            </form>
        </div>

        <div id="commands-container">
        </div>
    </div>

    <div class="c-container p-container">
        <span class="prompt">@Model.PromptName> Awaiting instructions...</span>
    </div>
</div>

<script>
        function reloadCommands() {

        if ('@Model.IsKillSwitchActive' === 'True') {
            return;
        }

        $.ajax({
            type: "GET",
            url: "/Communicator/GetCommands",
            success: function(response) {

                var commandsContainer = $("#commands-container")
                commandsContainer.empty();
                
                console.log(response);

                setTimeout(function() {

                    commandsContainer.html(response);
                    addPromptMessage("Change detected, updated command list.");

                }, 0);
            },
            error: function(error) {
                addPromptMessage("Error sending command: " + error);
                console.log(error);
            }
        });
    }

    function clickedAddButton() {

        if ('@Model.IsKillSwitchActive' === 'True') {
            addPromptMessage("Kill switch is currently active, all interactions are disabled.");
            return;
        }

        $('.add-command-section').slideToggle();
    }

    function editCommand(commandId) {

        if ('@Model.IsKillSwitchActive' === 'True') {
            addPromptMessage("Kill switch is currently active, all interactions are disabled.");
            return;
        }

        addPromptMessage("This function is not yet implemented.");
    }

    function deleteCommand(commandId) {

        // Todo, this is a bit of a hack, should be done in a better way.
        if ('@Model.IsKillSwitchActive' === 'True') {
            addPromptMessage("Kill switch is currently active, all interactions are disabled.");
            return;
        }

        $.ajax({

            type: "POST",
            url: "/Communicator/DeleteCommand",
            data: { 
                id: commandId 
            },
            success: function (response) {
                addPromptMessage("Command deleted succesfully.");
                reloadCommands();
            },
            error: function (jqXHR, textStatus, errorThrown) {

                if (jqXHR.status === 404) {
                
                    addPromptMessage("Command with id #" + commandId + " was not found.");
                } 
                else {
                
                    addPromptMessage("Failed to delete command with id #" + commandId + ".");
                }
            }
        });
    }

    function addCommand(name, description, payload) {

        if ('@Model.IsKillSwitchActive' === 'True') {
            addPromptMessage("Kill switch is currently active, all interactions are disabled.");
            return;
        }

        $.ajax({
            type: "POST",
            url: "/Communicator/AddCommand",
            data: { 
                name: name, 
                description: description, 
                rawPayload: payload 
            },
            success: function () {

                addPromptMessage("Command added successfully.");
                reloadCommands();
            },
            error: function (jqXHR, textStatus, errorThrown) {
            
                addPromptMessage("Failed to add command.");
            }
        });
    }

    function sendCommand(commandId) { 

        if ('@Model.IsKillSwitchActive' === 'True') {
            addPromptMessage("Kill switch is currently active, all interactions are disabled.");
            return;
        }

        $.ajax({
            type: "POST",
            url: "/Communicator/SendCommand",
            data: { 
                id: commandId 
            },
            success: function () {
                
                addPromptMessage("Command with id #" + commandId + " was sent successfully.");
            },
            error: function (jqXHR, textStatus, errorThrown) {

                if (jqXHR.status === 404) {
                
                    addPromptMessage("Command with id #" + commandId + " was not found.");
                } 
                else {
                
                    // todo: add info to response and give error message accordingly.
                    addPromptMessage("Failed to send command with id #" + commandId + ", consider checking settings.");
                }
            }
        });
    }

    function addPromptMessage(message) {

        var currentTime = '[@DateTime.Now.ToString("HH:mm:ss")]';
        var capitalizedMessage = message.charAt(0).toUpperCase() + message.slice(1);
        var promptMessage = currentTime + " " + "@Model.PromptName" + "> " +  capitalizedMessage;
        $('.p-container').append('<span class="prompt"> ' + promptMessage + '</span>');
    }

    function addCommandFormSubmitEventHandler() {
        
        $('#commandForm').submit(function(event) {

            event.preventDefault();

            if ('@Model.IsKillSwitchActive' === 'True') {
                addPromptMessage("Kill switch is currently active, all interactions are disabled.");
                return;
            }

            var name = $('#nameInput').val();
            var description = $('#descriptionInput').val();
            var payload = $('#payloadInput').val();
            console.log(name, description, payload);

            addCommand(name, description, payload);
        }); 
    }

    $(document).ready(function() {

        addCommandFormSubmitEventHandler();
        reloadCommands();
    });
</script>


@* TODO: Clean up this CSS mess. *@
<style>
    body {
        font-family: 'Poppins', sans-serif;
        font-size: 1em;
        background-color: #1C1C1C; 
        color: #FFFFFF;
    }

    .submit-container {
        width: 100%;
        height: 3.5em;
    }

    .submit-btn {
        padding: 4px 8px;
        background: linear-gradient(to right, #08C, #6A3E06);
        color: #FFFFFF;
        border: none;
        border-radius: 5px;
        transition: all 0.3s ease;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        margin-bottom: 0.5em;
        margin-top: 1.5em;
        float: right;
    }

    @* Todo make less sloppy. This is to safe time for now *@
    .add-command-section label {
        margin-bottom: 0.5em;
        margin-top: 0.4em;
        color: #00BCD4;
        font-weight: bold;  
    }

    .add-command-section button {
        margin-top: 1em;
        margin-bottom: 0.2em;
    }

    .add-command-form {
        width: 100%;
        padding-right: 0.5em;
    }

    .add-command-section {
        margin-bottom: 10px;
        border-radius: 6px;
        background-color: #2C2C2C;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        padding: 0.5em 1em;
        display: none;
    }

    .add-btn {
        padding: 4px 8px;
        background: linear-gradient(to right, #08C, #6A3E06);
        color: #FFFFFF;
        border: none;
        border-radius: 5px;
        transition: all 0.3s ease;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        margin-bottom: 0.5em;
        margin-top: 0.2em;
    }

    .add-btn-section {
        display: block ruby;
        text-align: end;
        margin-top: -0.3em;
        margin-bottom: 10px;
        border-radius: 6px;
        padding: 0.2em;
            padding-right: 0.2em;
        background-color: #2C2C2C;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        padding-right: 0.5em;
    }

    .btn-section {
        display: grid;
        padding-right: 0em;

    }

    .command-name {
        color: #00BCD4;
        font-weight: bold;
        margin-bottom: 1.5em;
    }
    
    .command-row {
        width: 90%;
        display: block;
    }

    .command-description {
        color: #00BCD4;
        line-height: 1.6;
        margin-top: 10px;
        margin-bottom: 1.1em;
        font-size: 0.7em;
    }

    .command-payload {
        font-family: 'Poppins', sans-serif;
        margin-top: 4px;
        color: #8990FF;
        font-size: 0.7em;
    }

    .command-payload:hover {
        color: #81C784; 
        cursor: pointer;
    }

    .send-btn:hover {
        background: linear-gradient(to right, #0056b3, #002d70); 
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); 
        background-color: #0056b3;
    }
    
    .mutate-btn {
        padding: 4px 8px;
        width: 2.2em;
        background: linear-gradient(to right, #08C, #6A3E06);
        color: #FFFFFF;
        border: none;
        border-radius: 5px;
        transition: all 0.3s ease;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    .command-container {
        margin-bottom: 10px;
        border-radius: 6px;
        padding: 0.75em;
        background-color: #2C2C2C; 
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); 
    }

    .prompt {
        color: #00FF00;
        background-color: #0F0F0F;
        width: 100%;
        display: block;
        font-family: 'Poppins', sans-serif;
        font-size: 12px;
    }

    .prompt-message {
        color: #00FF00;
        background-color: #0F0F0F;
        border: none;
        outline: none;
        font-family: 'Poppins', sans-serif;
    }

    .main-container {
        display: flex;
        justify-content: space-around;
        gap: 30px;
        padding: 20px;
    }

    .command-overview-container {
        flex: 1;
        background-color: #f0f0f0;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        padding: 15px;
        max-width: 45%;
        min-width: 25em;
    }

    .c-container {
        border: 5px ridge gray;
        padding: 10px;
        background-color: #0F0F0F;
        color: #00FF00;
        width: 50%; 
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        min-height: 45em;
        max-height: 0vh; 
        overflow-y: auto;
        @* TODO: No clue why this works, but it does, investigate later. *@
    }
</style>